doctype html
html
    head
        title= title
        meta(charset="utf-8")
        link(rel="stylesheet",href="/css/pdf-slide.css")
        style.
            .controls {
                position: absolute;
                bottom: 1em;
                right: 1em;
                opacity:0.3;
                transition: all 1s;
            }

            .controls:hover {
                opacity:1;
            }
            .controls .arrow {
                width: 0;
                height: 0;
                border: 4em solid #71E9F4;
                float: left;
                margin-right: 1em;
                -webkit-touch-callout: none;
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }
            .controls .prev {
                border-top-color: transparent;
                border-right-width: 4em;
                border-bottom-color: transparent;
                border-left: 0 transparent;
            }
            .controls .next {
                border-top-color: transparent;
                border-right: 0 transparent;
                border-bottom-color: transparent;
                border-left-width: 4em;
            }
            .controls .prev:hover {
                border-right-color: #13DAEC;
                cursor: pointer;
            }
            .controls .next:hover {
                border-left-color: #13DAEC;
                cursor: pointer;
            }
            .fix_panel{
                position:fixed;
                width:100vw;
                z-index:1000;
                opacity:0.4;
                padding-bottom:2%;
                padding-left:1%;
                bottom:0
            }

            .fix_panel input {
                width:50%;
                height:2rem;
                font-size:1.5rem;

            }

            .marqueeRightLeft {
                z-index:999;
                width:100%;
                height:100%;
                margin: 0 auto;
                position: fixed;
                overflow: hidden;
                text-align: left;
                color:#fff;
                font-size:2rem;
                text-shadow:black 1px 1px 0px, black -1px 1px 0px,black 1px -1px 0px, black -1px -1px 0px;
                -webkit-text-shadow:black 1px 1px 0px, black -1px 1px 0px,black 1px -1px 0px, black -1px -1px 0px;
                font-weight: bold;
            }
            .marqueeRightLeft p:after {
                content: "";
                white-space: nowrap;
            }
            .marqueeRightLeft p {
                margin: 0;
                position:absolute;
                padding-left: 100%;
                display: inline-block;
                white-space: nowrap;
                -webkit-animation-name:marqueeRL;
                -webkit-animation-timing-function:linear;
                -webkit-animation-duration:12s;
                -webkit-animation-iteration-count:1;
                animation-name:marqueeRL;
                animation-timing-function:linear;
                animation-duration:12s;
                animation-iteration-count:1;
            }
            @-webkit-keyframes marqueeRL {
                from {
                    -webkit-transform:translate(0);
                } 
                50% {
                  -webkit-transform:translate(-50%);  
                }
                to {
                    -webkit-transform:translate(-100%);
                }
            }
            @keyframes marqueeRL {
                from {
                    transform:translate(0);
                } 
                50% {
                    transform:translate(-50%);  
                }
                to {
                    transform:translate(-100%);
                }
            }

    body
        #marquee.marqueeRightLeft
        #pdf-container.pdf-page
        .controls
            #js-prev.arrow.prev
            #js-next.arrow.next
        .fix_panel
            input#message(type="text")
    script(src="/socket.io/socket.io.js")
    script(src="/js/PDFJSController.js")
    script.

        var marqueeBox = document.querySelector('#marquee');
        var isWriting = false;
        var pdf="#{file}";
        var socket = io.connect('', {query: 'file=' + pdf});
        socket.on('connect', function(){
            setup();

            //send message
            var message = document.querySelector('#message');
            message.onkeydown = function(event){
                if(event.keyCode === 13 && message.value !== ''){
                    socket.emit('message', message.value.substr(0,100));
                    message.value = '';
                }
            };

            //isWriting
            message.onfocus = function(){
                isWriting = true;
            }
            message.onblur = function(){
                isWriting = false;
            }


            //receive message
            socket.on('message', function(message){

                var p = document.createElement('p');
                p.innerText = message.text;
                p.style.top = message.top + '%';
                p.style.animationDuration = message.sec + 'S';
                marqueeBox.appendChild(p);
                p.addEventListener('animationend', function(){
                    console.log('animation end!');
                    marqueeBox.removeChild(this);
                });
                p.addEventListener('webkitAnimationEnd', function(){
                    console.log('webkitAnimation end!');
                    marqueeBox.removeChild(this);
                });
            });
        });

        function setup(){
            var container = document.getElementById('pdf-container');
            controller = new PDFJSController({
                container: container,
                pdfjsDistDir: "/pdfjs-dist/"
            });
            var PDFURL = '/pdf/' + pdf + ".pdf";

            controller.loadDocument(PDFURL).then(initializedEvent).catch(function (error) {
                console.error(error);
            });
        }

        function getCornerColor(context) {
            var canvasColor = context.getImageData(0, 0, 1, 1);
            var pixels = canvasColor.data;
            var r = pixels[0];
            var g = pixels[1];
            var b = pixels[2];
            return "rgb(" + r + ',' + g + ',' + b + ")";
        }

    - if (controller)
        script.
            function initializedEvent() {
                document.getElementById('js-prev').addEventListener('click', function(){
                   var prevReturn = controller.prevPage();
                   if(prevReturn){
                    socket.emit('move',controller.pageNum);
                   }
                });
                document.getElementById('js-next').addEventListener('click', function(){
                    var nextReturn = controller.nextPage();
                    if(nextReturn) {
                        socket.emit('move',controller.pageNum);
                    }
                });

                window.addEventListener("resize", function (event) {
                    controller.fitItSize();
                });
                document.onkeydown = function (event) {
                    var kc = event.keyCode;
                    if(isWriting) {
                        return;
                    }
                    if (event.shiftKey || event.ctrlKey || event.metaKey) {
                        return;
                    }
                    if (kc === 37 || kc === 40 || kc === 75 || kc === 65) {
                        // left, down, K, A
                        event.preventDefault();
                        var prevReturn = controller.prevPage();
                        if(prevReturn){
                            socket.emit('move',controller.pageNum);
                        }
                    } else if (kc === 38 || kc === 39 || kc === 74 || kc === 83) {
                        // up, right, J, S
                        event.preventDefault();
                        var nextReturn = controller.nextPage();
                        if(nextReturn){
                            socket.emit('move',controller.pageNum);
                        }
                    }

                };
            }
    - else
        script.
            socket.on('move', function(page){
                controller._queueRenderPage(page);
                controller.pageNum = page;
            });
            function initializedEvent() {
                document.getElementById('js-prev').addEventListener('click', controller.prevPage.bind(controller));
                document.getElementById('js-next').addEventListener('click', controller.nextPage.bind(controller));

                window.addEventListener("resize", function (event) {
                    controller.fitItSize();
                });
                document.onkeydown = function (event) {
                    var kc = event.keyCode;
                    if(isWriting) {
                        return;
                    }
                    if (event.shiftKey || event.ctrlKey || event.metaKey) {
                        return;
                    }
                    if (kc === 37 || kc === 40 || kc === 75 || kc === 65) {
                        // left, down, K, A
                        event.preventDefault();
                        controller.prevPage();
                    } else if (kc === 38 || kc === 39 || kc === 74 || kc === 83) {
                        // up, right, J, S
                        event.preventDefault();
                        controller.nextPage();
                    }

                };
            }
    



